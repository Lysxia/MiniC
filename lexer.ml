# 4 "Documents/compil/minic/lexer.mll"
 
  open Lexing
  open Parser

  exception Lexing_error of string

  let kwd_tbl =
    ["char", CHAR;
     "else", ELSE;
     "for", FOR;
     "if", IF;
     "int", INT;
     "return", RETURN;
     "sizeof", SIZEOF;
     "struct", STRUCT;
     "union", UNION;
     "void", VOID;
     "while", WHILE]

  let id_or_kwd =
    let h = Hashtbl.create 17 in
    List.iter (fun (s,t) -> Hashtbl.add h s t) kwd_tbl;
    fun s ->
      try List.assoc s kwd_tbl with _ -> IDENT s

  let newline lexbuf =
    let pos = lexbuff.lex_curr_p in
    lexbuff.lex_curr_p <-
      { pos with
          pos_lnum = pos.pos_lnum + 1;
          pos_bol = pos.pos_cnum }
  
  let char_num lexbuf =
    lexbuff.lex_curr_p.pos_cnum - lexbuff.lex_curr_p.pos_bol

# 38 "Documents/compil/minic/lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base = 
   "\000\000\220\255\094\000\174\000\184\000\224\255\009\000\227\255\
    \228\255\230\255\002\000\003\000\001\000\015\000\031\000\197\000\
    \243\255\244\255\245\255\246\255\247\255\248\255\249\255\250\255\
    \251\255\252\255\212\000\003\000\255\255\239\255\242\255\234\255\
    \240\255\226\255\233\255\231\255\225\255\031\001\195\000\054\001\
    \221\255\055\001\136\001\216\001\239\001\102\001\252\255\253\255\
    \047\000\255\255\254\255\001\000\253\255\254\255\255\255";
  Lexing.lex_backtrk = 
   "\032\000\255\255\035\000\032\000\032\000\255\255\035\000\255\255\
    \255\255\255\255\023\000\018\000\017\000\019\000\014\000\020\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\002\000\001\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\032\000\032\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \002\000\255\255\255\255\255\255\255\255\255\255\255\255";
  Lexing.lex_default = 
   "\001\000\000\000\255\255\255\255\255\255\000\000\255\255\000\000\
    \000\000\000\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\047\000\000\000\000\000\
    \255\255\000\000\000\000\053\000\000\000\000\000\000\000";
  Lexing.lex_trans = 
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\027\000\028\000\054\000\027\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \027\000\011\000\002\000\027\000\000\000\007\000\012\000\033\000\
    \024\000\023\000\025\000\013\000\017\000\015\000\016\000\008\000\
    \004\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \003\000\003\000\032\000\018\000\010\000\014\000\009\000\035\000\
    \034\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\022\000\031\000\021\000\050\000\026\000\
    \000\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\020\000\006\000\019\000\042\000\042\000\
    \040\000\042\000\042\000\042\000\042\000\036\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\041\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \038\000\038\000\038\000\038\000\038\000\038\000\038\000\038\000\
    \003\000\003\000\029\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\003\000\003\000\000\000\000\000\000\000\
    \005\000\052\000\000\000\030\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\000\000\
    \037\000\000\000\000\000\026\000\000\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\042\000\000\000\000\000\000\000\000\000\042\000\000\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \049\000\000\000\000\000\000\000\000\000\000\000\000\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\000\000\000\000\000\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \048\000\000\000\000\000\042\000\000\000\000\000\000\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \042\000\042\000\040\000\042\000\042\000\042\000\042\000\043\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\041\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\044\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\044\000\044\000\044\000\044\000\044\000\044\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\000\000\000\000\
    \000\000\044\000\044\000\044\000\044\000\044\000\044\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\046\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check = 
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\051\000\027\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\000\000\000\000\027\000\255\255\000\000\000\000\012\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\013\000\000\000\000\000\000\000\000\000\010\000\
    \011\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\014\000\000\000\048\000\000\000\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\006\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\002\000\002\000\
    \002\000\002\000\002\000\002\000\002\000\002\000\003\000\003\000\
    \003\000\003\000\003\000\003\000\003\000\003\000\003\000\003\000\
    \004\000\004\000\004\000\004\000\004\000\004\000\004\000\004\000\
    \004\000\004\000\015\000\038\000\038\000\038\000\038\000\038\000\
    \038\000\038\000\038\000\038\000\038\000\255\255\255\255\255\255\
    \000\000\051\000\255\255\015\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\255\255\
    \004\000\255\255\255\255\026\000\255\255\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\026\000\
    \026\000\026\000\026\000\026\000\026\000\026\000\026\000\037\000\
    \037\000\037\000\037\000\037\000\037\000\037\000\037\000\037\000\
    \037\000\041\000\255\255\255\255\255\255\255\255\041\000\255\255\
    \037\000\037\000\037\000\037\000\037\000\037\000\039\000\039\000\
    \039\000\039\000\039\000\039\000\039\000\039\000\039\000\039\000\
    \045\000\255\255\255\255\255\255\255\255\255\255\255\255\039\000\
    \039\000\039\000\039\000\039\000\039\000\255\255\255\255\255\255\
    \037\000\037\000\037\000\037\000\037\000\037\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \045\000\255\255\255\255\041\000\255\255\255\255\255\255\039\000\
    \039\000\039\000\039\000\039\000\039\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\041\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \042\000\042\000\042\000\042\000\042\000\042\000\042\000\042\000\
    \043\000\043\000\043\000\043\000\043\000\043\000\043\000\043\000\
    \043\000\043\000\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\043\000\043\000\043\000\043\000\043\000\043\000\044\000\
    \044\000\044\000\044\000\044\000\044\000\044\000\044\000\044\000\
    \044\000\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \044\000\044\000\044\000\044\000\044\000\044\000\255\255\255\255\
    \255\255\043\000\043\000\043\000\043\000\043\000\043\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \044\000\044\000\044\000\044\000\044\000\044\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\045\000\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code = 
   "";
  Lexing.lex_backtrk_code = 
   "";
  Lexing.lex_default_code = 
   "";
  Lexing.lex_trans_code = 
   "";
  Lexing.lex_check_code = 
   "";
  Lexing.lex_code = 
   "";
}

let rec token lexbuf =
    __ocaml_lex_token_rec lexbuf 0
and __ocaml_lex_token_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 55 "Documents/compil/minic/lexer.mll"
         ( newline lexbuf; token lexbuf )
# 277 "Documents/compil/minic/lexer.ml"

  | 1 ->
# 56 "Documents/compil/minic/lexer.mll"
           ( token lexbuf )
# 282 "Documents/compil/minic/lexer.ml"

  | 2 ->
let
# 57 "Documents/compil/minic/lexer.mll"
             id
# 288 "Documents/compil/minic/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 57 "Documents/compil/minic/lexer.mll"
                ( id_or_kwd id )
# 292 "Documents/compil/minic/lexer.ml"

  | 3 ->
# 58 "Documents/compil/minic/lexer.mll"
         ( STAR )
# 297 "Documents/compil/minic/lexer.ml"

  | 4 ->
# 59 "Documents/compil/minic/lexer.mll"
         ( LPAR )
# 302 "Documents/compil/minic/lexer.ml"

  | 5 ->
# 60 "Documents/compil/minic/lexer.mll"
         ( RPAR )
# 307 "Documents/compil/minic/lexer.ml"

  | 6 ->
# 61 "Documents/compil/minic/lexer.mll"
         ( LBKT )
# 312 "Documents/compil/minic/lexer.ml"

  | 7 ->
# 62 "Documents/compil/minic/lexer.mll"
         ( RBKT )
# 317 "Documents/compil/minic/lexer.ml"

  | 8 ->
# 63 "Documents/compil/minic/lexer.mll"
         ( LBRC )
# 322 "Documents/compil/minic/lexer.ml"

  | 9 ->
# 64 "Documents/compil/minic/lexer.mll"
         ( RBRC )
# 327 "Documents/compil/minic/lexer.ml"

  | 10 ->
# 65 "Documents/compil/minic/lexer.mll"
         ( SEMICOLON )
# 332 "Documents/compil/minic/lexer.ml"

  | 11 ->
# 66 "Documents/compil/minic/lexer.mll"
         ( COMMA )
# 337 "Documents/compil/minic/lexer.ml"

  | 12 ->
# 67 "Documents/compil/minic/lexer.mll"
         ( DOT )
# 342 "Documents/compil/minic/lexer.ml"

  | 13 ->
# 68 "Documents/compil/minic/lexer.mll"
         ( ARRW )
# 347 "Documents/compil/minic/lexer.ml"

  | 14 ->
# 69 "Documents/compil/minic/lexer.mll"
         ( ASSIGN )
# 352 "Documents/compil/minic/lexer.ml"

  | 15 ->
# 70 "Documents/compil/minic/lexer.mll"
         ( INCR )
# 357 "Documents/compil/minic/lexer.ml"

  | 16 ->
# 71 "Documents/compil/minic/lexer.mll"
          ( DECR )
# 362 "Documents/compil/minic/lexer.ml"

  | 17 ->
# 72 "Documents/compil/minic/lexer.mll"
         ( ADDRESS )
# 367 "Documents/compil/minic/lexer.ml"

  | 18 ->
# 73 "Documents/compil/minic/lexer.mll"
         ( NOT )
# 372 "Documents/compil/minic/lexer.ml"

  | 19 ->
# 74 "Documents/compil/minic/lexer.mll"
         ( PLUS )
# 377 "Documents/compil/minic/lexer.ml"

  | 20 ->
# 75 "Documents/compil/minic/lexer.mll"
         ( MINUS )
# 382 "Documents/compil/minic/lexer.ml"

  | 21 ->
# 76 "Documents/compil/minic/lexer.mll"
         ( EQ )
# 387 "Documents/compil/minic/lexer.ml"

  | 22 ->
# 77 "Documents/compil/minic/lexer.mll"
         ( NEQ )
# 392 "Documents/compil/minic/lexer.ml"

  | 23 ->
# 78 "Documents/compil/minic/lexer.mll"
         ( LT )
# 397 "Documents/compil/minic/lexer.ml"

  | 24 ->
# 79 "Documents/compil/minic/lexer.mll"
         ( LEQ )
# 402 "Documents/compil/minic/lexer.ml"

  | 25 ->
# 80 "Documents/compil/minic/lexer.mll"
         ( GT )
# 407 "Documents/compil/minic/lexer.ml"

  | 26 ->
# 81 "Documents/compil/minic/lexer.mll"
         ( GEQ )
# 412 "Documents/compil/minic/lexer.ml"

  | 27 ->
# 82 "Documents/compil/minic/lexer.mll"
         ( DIV )
# 417 "Documents/compil/minic/lexer.ml"

  | 28 ->
# 83 "Documents/compil/minic/lexer.mll"
         ( MOD )
# 422 "Documents/compil/minic/lexer.ml"

  | 29 ->
# 84 "Documents/compil/minic/lexer.mll"
         ( AND )
# 427 "Documents/compil/minic/lexer.ml"

  | 30 ->
# 85 "Documents/compil/minic/lexer.mll"
         ( OR )
# 432 "Documents/compil/minic/lexer.ml"

  | 31 ->
# 86 "Documents/compil/minic/lexer.mll"
         ( EOF )
# 437 "Documents/compil/minic/lexer.ml"

  | 32 ->
let
# 87 "Documents/compil/minic/lexer.mll"
               n
# 443 "Documents/compil/minic/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 87 "Documents/compil/minic/lexer.mll"
                 ( CST (int_of_string n) )
# 447 "Documents/compil/minic/lexer.ml"

  | 33 ->
let
# 88 "Documents/compil/minic/lexer.mll"
                  n
# 453 "Documents/compil/minic/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos lexbuf.Lexing.lex_curr_pos in
# 88 "Documents/compil/minic/lexer.mll"
                    ( CST (int_of_string ("0o"^n)) )
# 457 "Documents/compil/minic/lexer.ml"

  | 34 ->
let
# 89 "Documents/compil/minic/lexer.mll"
                 s
# 463 "Documents/compil/minic/lexer.ml"
= Lexing.sub_lexeme lexbuf lexbuf.Lexing.lex_start_pos (lexbuf.Lexing.lex_curr_pos + -1) in
# 89 "Documents/compil/minic/lexer.mll"
                        ( STR s )
# 467 "Documents/compil/minic/lexer.ml"

  | 35 ->
let
# 90 "Documents/compil/minic/lexer.mll"
         c
# 473 "Documents/compil/minic/lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 90 "Documents/compil/minic/lexer.mll"
           (
    raise (Lexing_error ("Illegal character: "^String.make c)) )
# 478 "Documents/compil/minic/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_token_rec lexbuf __ocaml_lex_state

and comment lexbuf =
    __ocaml_lex_comment_rec lexbuf 45
and __ocaml_lex_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 94 "Documents/compil/minic/lexer.mll"
         ( newline lexbuf; comment lexbuf )
# 489 "Documents/compil/minic/lexer.ml"

  | 1 ->
# 95 "Documents/compil/minic/lexer.mll"
          ( token lexbuf )
# 494 "Documents/compil/minic/lexer.ml"

  | 2 ->
# 96 "Documents/compil/minic/lexer.mll"
         ( comment lexbuf )
# 499 "Documents/compil/minic/lexer.ml"

  | 3 ->
# 97 "Documents/compil/minic/lexer.mll"
         ( raise (Lexing_error "Unterminated comment") )
# 504 "Documents/compil/minic/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_comment_rec lexbuf __ocaml_lex_state

and line_comment lexbuf =
    __ocaml_lex_line_comment_rec lexbuf 51
and __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 100 "Documents/compil/minic/lexer.mll"
         ( newline lexbuf; token lexbuf )
# 515 "Documents/compil/minic/lexer.ml"

  | 1 ->
# 101 "Documents/compil/minic/lexer.mll"
         ( token lexbuf )
# 520 "Documents/compil/minic/lexer.ml"

  | 2 ->
# 102 "Documents/compil/minic/lexer.mll"
         ( EOF )
# 525 "Documents/compil/minic/lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf; __ocaml_lex_line_comment_rec lexbuf __ocaml_lex_state

;;

