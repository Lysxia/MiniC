10/19
Questions :
- are successive identical declarations illegal ?
"int a; int a;" "int a; char* a;"
- why is the testing instruction in a 'for' block optional when there is
  no break ?
"for (i=0;;i++)"
- aren't all pointers the same size ?
"sizeof(...***)"

10/25
- 32 bits signed integers are not fully supported in lexer/parser.
  OCaml integers are 31 bits wide on 32 bit architectures,
  on 64b there is no problem however.

10/28
- Parsing errors probably should be taken care of inside parser.mly
    ...(*an error occurs*) print_err_loc location; raise Error;

10/30
- see utest/ctst.c for syntax details
- contrary to what the subject states, gcc does not allow
  bounding an ident to both an union and a struct
- boundings inside a block overwrite declarations done outside. But
  inside one statement sequence there can not be 2 variables with the
  same name

